# Multi-stage Virtual Environment Optimized Dockerfile for RunPod Serverless - Higgs Audio V2
# Target: <4GB container size with virtual environment on network volume

# Stage 1: Build virtual environment on network volume
FROM python:3.10-slim AS builder

# Set working directory
WORKDIR /app

# Install minimal system dependencies and virtual environment tools
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Install virtual environment package
RUN pip install --no-cache-dir virtualenv

# Create virtual environment on network volume with project-specific name
RUN virtualenv /runpod-volume/higgs

# Activate virtual environment and set up environment
ENV PATH="/runpod-volume/higgs/bin:$PATH"
ENV VIRTUAL_ENV="/runpod-volume/higgs"
ENV PYTHONPATH="/app"

# Copy ultra-optimized requirements
COPY requirements.runpod.ultra ./

# Install ALL dependencies in virtual environment
RUN pip install --no-cache-dir --upgrade pip setuptools wheel && \
    pip install --no-cache-dir --upgrade-strategy only-if-needed \
        --prefer-binary --no-warn-conflicts \
        torch==2.6.0 torchvision==0.21.0 torchaudio==2.6.0 --index-url https://download.pytorch.org/whl/cu126 && \
    pip install --no-cache-dir -r requirements.runpod.ultra

# Verify all dependencies are available in virtual environment
RUN python -c "import librosa; import soundfile; import transformers; import torch; print('All dependencies verified successfully in virtual environment')"

# Stage 2: Minimal runtime container
FROM python:3.10-slim

# Set working directory
WORKDIR /app

# Environment variables for virtual environment
ENV PATH="/runpod-volume/higgs/bin:$PATH"
ENV VIRTUAL_ENV="/runpod-volume/higgs"
ENV PYTHONUNBUFFERED=1
ENV PYTHONOPTIMIZE=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONPATH="/app"

# Create non-root user with minimal permissions
RUN useradd -m -u 1000 -s /bin/bash runpod

# Copy virtual environment from builder stage
COPY --from=builder /runpod-volume/higgs /runpod-volume/higgs

# Copy application files
COPY setup.py pyproject.toml ./
COPY boson_multimodal/ boson_multimodal/

# Install our package in virtual environment
RUN pip install --no-cache-dir -e . --no-deps

# Verify virtual environment and CUDA availability
RUN python -c "import torch; print(f'PyTorch version: {torch.__version__}'); print(f'Virtual environment: {__import__(\"sys\").prefix}'); print(f'CUDA available: {torch.cuda.is_available()}')"

# Copy optimized serverless handler and bootstrap scripts
COPY serverless_handler_optimized.py ./serverless_handler.py
COPY bootstrap_venv.sh ./bootstrap_venv.sh
COPY test_venv_validation.sh ./test_venv_validation.sh

# Clean up files aggressively
RUN rm -f setup.py && \
    find /app -name "*.pyc" -delete -print 2>/dev/null || true && \
    find /app -name "__pycache__" -type d -exec rm -rf {} + 2>/dev/null || true && \
    rm -rf /app/examples /app/tests /app/docs /app/*.md 2>/dev/null || true

# Set ownership
RUN chown -R runpod:runpod /app && \
    chmod -R 755 /app 2>/dev/null || true
USER runpod

# Set environment variables for RunPod
ENV MODEL_PATH=/runpod-volume/higgs_audio/bosonai/higgs-audio-v2-generation-3B-base
ENV TOKENIZER_PATH=/runpod-volume/higgs_audio/bosonai/higgs-audio-v2-tokenizer
ENV VOICE_PROMPTS_PATH=/runpod-volume/higgs_audio/voice_prompts
ENV RUNPOD_PUBLIC_PORT=8080
ENV RUNPOD_CONTAINER_PORT=8080

# Health check with virtual environment validation
HEALTHCHECK --interval=60s --timeout=5s --start-period=120s --retries=2 \
    CMD python -c "import sys; import os; sys.exit(0 if sys.path[0].startswith('/runpod-volume/higgs') and os.path.exists('/runpod-volume/higgs/bin/python') else 1)"

# Expose port
EXPOSE 8080

# Set entrypoint with optimized startup
ENTRYPOINT ["python", "-u"]
CMD ["serverless_handler.py"]]